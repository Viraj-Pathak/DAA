# -*- coding: utf-8 -*-
"""Bubble Sort.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jv7KmuDMp3mDNIuMgoUwCCO825pdgyMI
"""

import numpy as np
import time
def viraj_bubble_sort(list):

# Swap the elements to arrange in order

    for num in range(0,len(list)):
        for ix in range(len(list)-1):
            if list[ix] > list[ix+1]:
            # Apply swapping formula

                list[ix], list[ix+1] = list[ix+1], list[ix]
    return list

n = int(input("Enter length of an array: "))
list = np.random.randint(1,1000,n)
print("Unsorted List is:", list)
print("-------------------------------------------------------------------------------------------------")

# Calling the function and calculating time
start = time.time()
viraj_bubble_sort(list)
print("Sorted List using Bubble Sort is:", list)
print("-------------------------------------------------------------------------------------------------")

end = time.time()
print("Runtime for Bubble Sort is:", end - start, "seconds")

import matplotlib.pyplot as plt
 # Example data
input_sizes = [5, 50, 100, 500, 1000]
# Replace with your input sizes
execution_times = [0.001, 0.002, 0.006, 0.08, 0.3]
# Replace with your measured times
# Create the plot
plt.plot(input_sizes, execution_times, marker='o', linestyle='-')
 # Label the axes and add a title
plt.xlabel('Input Size (n)')
plt.ylabel('Execution Time (seconds)')
plt.title('Sorting Algorithm Benchmark')
# Display the plot
plt.grid(True)
plt.show()